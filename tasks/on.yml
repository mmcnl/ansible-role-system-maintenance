---
- name: temporarily stop services
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: stopped
  with_items: "{{ maintenance_services_to_pause }}"

- name: set rounding based on estimated time
  set_fact:
    rounding_min: |
      {% if maintenance_min|int <= 15 %}5
      {% elif maintenance_min|int <= 60 %}15
      {% elif maintenance_min|int <= 180 %}30
      {% else %}60{% endif %}

- name: get rounded estimated end time of maintenance
  shell: |
    est_time=`date -d'+{{ rounding_min|int + maintenance_min|int }} minutes' '+%s'`
    rounded=$(($est_time - ($est_time % {{ rounding_min|int * 60 }}) ))
    TZ={{ maintenance_time_zone }} date -d"@$rounded" '+%b %d at %l:%M%P %Z'
  register: maintenance_end_time
  changed_when: false

- name: generate maintenance page
  template:
    src: "{{ maintenance_custom_page if maintenance_custom_page is defined else 'system_maintenance.html.j2' }}"
    dest: "{{ maintenance_html_dir }}/{{ maintenance_page }}"
  notify: restart nginx

- name: update conf file to turn maintenance mode on
  blockinfile:
    path: "{{ maintenance_nginx_conf }}"
    insertafter: "SYSTEM_MAINTENANCE_PLACEHOLDER"
    block: |
      error_page 503 @maintenance;
      location @maintenance {
          root {{ maintenance_html_dir }};
          rewrite ^(.*)$ /system_maintenance.html break;
          internal;
      }
      return 503;
    state: present
  notify: restart nginx
